I used rufus to install linux 17.04 from usb iso

sudo add-apt-repository ppa:graphics-drivers/ppa && sudo apt update

I than used ubuntu gui to make the following changes on system settings => software and updates:
on the ubuntu software tab => change download from to "main server"
on the additional drives tab => select the "using nvidia binary driver - version 384.59 ..."
click apply changes

restart your system to allow changes to take effect

Install CUDA 9.0RC. Download deb(local). from: 
https://developer.nvidia.com/cuda-release-candidate-download
then:


sudo dpkg -i cuda-repo-ubuntu1604-9-0-local-rc_9.0.103-1_amd64.deb
sudo apt-key add /var/cuda-repo-9-0-local-rc/7fa2af80.pub
sudo apt-get update
sudo apt-get install cuda


once gpu+cuda+path were taken care of we can now check the installation is correct by:
nvidia-smi

restart your system

download cudd (3 .deb files for installation+dev+samples) - I used version 7.0.1 from:
https://developer.nvidia.com/cudnn

sudo dpkg -i libcudnn7_7.0.1.13-1+cuda9.0_amd64.deb
sudo dpkg -i libcudnn7-dev_7.0.1.13-1+cuda9.0_amd64.deb
sudo dpkg -i libcudnn7-doc_7.0.1.13-1+cuda9.0_amd64.deb
cp -r /usr/src/cudnn_samples_v7/ $HOME
cd $HOME/cudnn_samples_v7/mnistCUDNN
make
./mnistCUDNN
this should run the cudnn mnist sample test - if you got output that ends with "Test passed" we can move on with installation 

install python-numpy,scipy,dev,pip, nose...
sudo apt-get install python-numpy python-scipy python-dev python-pip python-nose libopenblas-dev python-pandas

#install theano & keras

sudo pip install Theano
sudo pip install keras
echo "[global]" > ~/.theanorc
echo "floatX = float32" >> ~/.theanorc
echo "device = gpu0" >> ~/.theanorc
echo "[nvcc]" >> ~/.theanorc
echo "fastmath = True" >> ~/.theanorc

sudo apt-get update
sudo pip install matplotlib
sudo pip install bokeh
sudo pip install seaborn
sudo pip install lasagne


sudo apt-get install libhdf5-dev
sudo apt-get install cython
sudo pip install h5py
sudo pip install nolearn

sudo pip install jupyter

#install opencv - by tutorial from http://www.pyimagesearch.com/2015/06/22/install-opencv-3-0-and-python-2-7-on-ubuntu/ 

sudo apt-get update
sudo apt-get upgrade
sudo apt-get install build-essential cmake git pkg-config
sudo apt-get install libjpeg8-dev libtiff5-dev libjasper-dev libpng12-dev
sudo apt-get install libgtk2.0-dev
sudo apt-get install libavcodec-dev libavformat-dev libswscale-dev libv4l-dev
sudo apt-get install libatlas-base-dev gfortran

# the following part is not mandatory but is recommended:
	sudo pip install virtualenv virtualenvwrapper
	sudo rm -rf ~/.cache/pip
	export WORKON_HOME=$HOME/.virtualenvs
	source /usr/local/bin/virtualenvwrapper.sh
	source ~/.bashrc
	mkvirtualenv cv

#going back to the installation process:
cd ~
git clone https://github.com/Itseez/opencv.git
cd opencv
git checkout 3.1.0
cd ~
git clone https://github.com/Itseez/opencv_contrib.git
cd opencv_contrib
git checkout 3.1.0
cd ~/opencv
mkdir build
cd build
cmake -D CMAKE_BUILD_TYPE=RELEASE \
	-D CMAKE_INSTALL_PREFIX=/usr/local \
	-D INSTALL_C_EXAMPLES=OFF \
	-D INSTALL_PYTHON_EXAMPLES=ON \
	-D OPENCV_EXTRA_MODULES_PATH=~/opencv_contrib/modules \
	-D BUILD_EXAMPLES=ON ..

# as to the time of writing this set of commands there are still some bugs within the files 
#so the following fixes should be made:
in the file modules/cudalegacy/src/graphcuts.cpp - change line 45 from:
#if !defined (HAVE_CUDA) || defined (CUDA_DISABLER)
to:
#if !defined (HAVE_CUDA) || defined (CUDA_DISABLER) || (CUDART_VERSION >= 8000)

in the file /opencv_contrib-3.1.0/modules/hdf/include/opencv2/hdf/hdf5.hpp - change line 40 from:
#include <hdf5.h>
to:
#include "/usr/include/hdf5/serial/hdf5.h"

make -j4
sudo make install
sudo ldconfig

#if installed through the virtual environment 
	cd ~/.virtualenvs/cv/lib/python2.7/site-packages/
	ln -s /usr/local/lib/python2.7/site-packages/cv2.so cv2.so
	workon cv

#verify the installation:
python
import cv2
cv2.__version__

# should get '3.1.0'

# install xgboost
sudo pip install xgboost

sudo add-apt-repository ppa:mystic-mirage/pycharm
sudo apt update
sudo apt install pycharm-community
